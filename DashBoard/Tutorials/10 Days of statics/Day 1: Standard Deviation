Given an array,X, of N integers, calculate and print the standard deviation. Your answer should be in decimal form, rounded to a scale of 1 decimal place (i.e., 12.3 format). An error margin of +_ 0.1 will be tolerated for the standard deviation.

C++

using namespace std;

int main() 
{
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    
    int n; cin>>n; int a[n+4]; double sum=0, sum1=0;
    
    for(auto i=0; i<n; i++)
    {
        cin>>a[i];
        sum += a[i];
    }
    
    double mean = (double)(sum/n);
    
    for(auto i=0; i<n; i++)
    {
        sum1 += (((double)a[i]-mean)*((double)a[i]-mean));
    }
    
    double std = (double)sqrt(sum1/n);
    
    printf("%.1f\n", std);
    
    return 0;
}

Java8

public class Solution {

    public static void main(String[] args) {
        /* Read and save input */
        Scanner scan = new Scanner(System.in);
        int size = scan.nextInt();
        int [] array = new int[size];
        for (int i = 0; i < size; i++) {
            array[i] = scan.nextInt();
        }
        scan.close();

        System.out.format("%.1f", standardDeviation(array));
    }
    
    public static double getMean(int [] array) {
        int sum = 0;
        for (int x : array) {
            sum += x;
        }
        return (double) sum / array.length;
    }
    
    public static double standardDeviation(int [] array) {
        double mean = getMean(array);
        double sum = 0;
        for (int x : array) {
            sum += Math.pow(x - mean, 2);
        }
        double variance = sum / array.length;
        return Math.sqrt(variance);
    }
}

python3

import math

# Define functionts
def mean(data):
    return sum(data) / len(data)

def stddev(data, size):
    sum = 0
    for i in range(size):
        sum = sum + (data[i] - mean(data)) ** 2
    return math.sqrt(sum / size)

# Set data
size = int(input())
numbers = list(map(int, input().split()))

# Get standard deviation
print(round(stddev(numbers, size), 1))
